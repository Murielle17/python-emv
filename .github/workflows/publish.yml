name: Upload Python Package

on:
  release:
    types: [created]  # Déclenche le workflow uniquement lors de la création d'une nouvelle release

jobs:
  deploy:
    runs-on: ubuntu-latest  # Utilise une machine virtuelle Ubuntu pour l'exécution
    steps:
    # Étape 1 : Cloner le dépôt
    - name: Checkout repository
      uses: actions/checkout@v3

    # Étape 2 : Installer Python avec une version spécifique
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'  # Version stable recommandée

    # Étape 3 : Installer les dépendances nécessaires
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine build  # `build` est utilisé pour générer des fichiers modernes

    # Étape 4 : Construire et publier sur PyPI
    - name: Build and publish
      env:
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}  # Récupère le nom d'utilisateur depuis GitHub Secrets
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}  # Récupère le mot de passe depuis GitHub Secrets
      run: |
        python -m build  # Construit le package
        twine upload dist/*  # Télécharge les fichiers dans le répertoire `dist/` vers PyPI
